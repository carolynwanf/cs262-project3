syntax = "proto3";

// #define CREATE_ACCOUNT              1
// #define LOGIN                       2
// #define LOGOUT                      3
// #define LIST_USERS                  4
// #define SEND_MESSAGE                5
// #define QUERY_NOTIFICATIONS         6
// #define QUERY_MESSAGES              7
// #define DELETE_ACCOUNT              8
// #define MESSAGES_SEEN               9

// // Server->Client Messages
// #define NEW_MESSAGE                 10
// #define FORCE_LOG_OUT               20

// // Server->Client Replies 
// #define CREATE_ACCOUNT_REPLY        11
// #define LOGIN_REPLY                 12
// #define LIST_USERS_REPLY            13
// #define SEND_MESSAGE_REPLY          14
// #define QUERY_NOTIFICATIONS_REPLY   15
// #define QUERY_MESSAGES_REPLY        16
// #define MESSAGES_SEEN_REPLY         18

service chatService {
    rpc CreateAccount(createAccountMessage) returns (createAccountReply);
    rpc Login(loginMessage) returns (loginReply);
    rpc Logout(logoutMessage) returns (logoutReply);
    rpc ListUsers(queryUsersMessage) returns (stream user);
    rpc SendMessage(sendMessageMessage) returns (sendMessageReply);
    rpc QueryNotifications(queryNotificationsMessage) returns (stream notification);
    rpc QueryMessages(queryMessagesMessage) returns (stream returnMessage);
    rpc DeleteAccount(deleteAccountMessage) returns (deleteAccountReply);

    // May not need this anymore?
    rpc MessagesSeen(messagesSeenMessage) returns (messagesSeenReply);


    // Server->client
    rpc NewMessage(newMessageMessage) returns (newMessageReply);
}


// TODO
message createAccountMessage {

}

// TODO
message createAccountReply {

}

// TODO
message loginMessage {

}

// TODO
message loginReply {

}

// TODO
message logoutMessage {

}

// TODO
message logoutReply {

}

// TODO
message queryUsersMessage {

}

// TODO
message user {

}

// TODO
message sendMessageMessage {

}

// TODO
message sendMessageReply {

}

// TODO
message queryNotificationsMessage {

}

// TODO
message notification {

}

// TODO
message queryMessagesMessage {

}

// TODO: stream of these is returned by server when client queries for messages
//        with a user
message returnMessage {

}

// TODO
message deleteAccountMessage {

}

// TODO
message deleteAccountReply {

}

// TODO
message messagesSeenMessage {

}

message messagesSeenReply {

}

// TODO: this is sent by the server to the client
message newMessageMessage {

}

// TODO: the client responds to the server?
message newMessageReply {

}